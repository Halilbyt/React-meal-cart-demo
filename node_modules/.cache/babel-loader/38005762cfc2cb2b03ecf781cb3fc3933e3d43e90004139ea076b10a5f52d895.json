{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D4rkS\\\\desktop\\\\react\\\\meal-order\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport CardContext from \"./cart-contex\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const itemIsExistingIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existCartItem = state.items[itemIsExistingIndex];\n    let updatedItems;\n    if (existCartItem) {\n      const updatedItem = {\n        ...existCartItem,\n        amount: existCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[itemIsExistingIndex] = updatedItem;\n    } else {\n      updatedItems = {\n        ...action.item\n      };\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id,\n      id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CardContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","itemIsExistingIndex","findIndex","id","existCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/D4rkS/desktop/react/meal-order/src/store/CartProvider.js"],"sourcesContent":["import CardContext from \"./cart-contex\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const itemIsExistingIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existCartItem = state.items[itemIsExistingIndex];\r\n\r\n    let updatedItems;\r\n\r\n    if (existCartItem) {\r\n      const updatedItem = {\r\n        ...existCartItem,\r\n        amount: existCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[itemIsExistingIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = { ...action.item };\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id, id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CardContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,UAAU,QAAQ,OAAO;AAAC;AAEnC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IAE5D,MAAMC,mBAAmB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAC9CJ,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,CACrC;IAED,MAAMC,aAAa,GAAGV,KAAK,CAACH,KAAK,CAACU,mBAAmB,CAAC;IAEtD,IAAII,YAAY;IAEhB,IAAID,aAAa,EAAE;MACjB,MAAME,WAAW,GAAG;QAClB,GAAGF,aAAa;QAChBJ,MAAM,EAAEI,aAAa,CAACJ,MAAM,GAAGL,MAAM,CAACG,IAAI,CAACE;MAC7C,CAAC;MACDK,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAK,CAAC;MAC/Bc,YAAY,CAACJ,mBAAmB,CAAC,GAAGK,WAAW;IACjD,CAAC,MAAM;MACLD,YAAY,GAAG;QAAE,GAAGV,MAAM,CAACG;MAAK,CAAC;MACjCO,YAAY,GAAGX,KAAK,CAACH,KAAK,CAACgB,MAAM,CAACZ,MAAM,CAACG,IAAI,CAAC;IAChD;IAEA,OAAO;MACLP,KAAK,EAAEc,YAAY;MACnBb,WAAW,EAAEK;IACf,CAAC;EACH;EACA,OAAOP,gBAAgB;AACzB,CAAC;AAED,MAAMkB,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGtB,UAAU,CAChDI,WAAW,EACXH,gBAAgB,CACjB;EAED,MAAMsB,cAAc,GAAId,IAAI,IAAK;IAC/Ba,kBAAkB,CAAC;MAAEf,IAAI,EAAE,KAAK;MAAEE,IAAI,EAAEA;IAAK,CAAC,CAAC;EACjD,CAAC;EAED,MAAMe,iBAAiB,GAAIV,EAAE,IAAK;IAChCQ,kBAAkB,CAAC;MAAEf,IAAI,EAAE,QAAQ;MAAEO,EAAE;MAAEA;IAAG,CAAC,CAAC;EAChD,CAAC;EAED,MAAMW,WAAW,GAAG;IAClBvB,KAAK,EAAEmB,SAAS,CAACnB,KAAK;IACtBC,WAAW,EAAEkB,SAAS,CAAClB,WAAW;IAClCuB,OAAO,EAAEH,cAAc;IACvBI,UAAU,EAAEH;EACd,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACtCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GA1BIT,YAAY;AAAA,KAAZA,YAAY;AA4BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}